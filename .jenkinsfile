pipeline {
    agent any
    tools { 
        maven 'MAVEN_HOME'
    }
    stages {

          stage('Gating Conditions') {
    steps {
        script {
            // Example gating conditions
            def prName = env.CHANGE_ID ? "PR-${env.CHANGE_ID}" : "No PR"
            def minApprovals = 2 // Set your required minimum approvals
            def currentApprovals = getCurrentApprovalsFromYourVCS() // Implement this logic

            // Check PR name
            if (!prName.matches("Devops-repos-PR-\\d+")) { // Adjusted for your repo
                error "PR name does not meet the required format."
            }

            // Check for minimum approvals
            if (currentApprovals < minApprovals) {
                error "Not enough approvals. Required: ${minApprovals}, Current: ${currentApprovals}."
            }

            echo "Gating conditions passed."
        }
    }
}

        stage('Stage 1: Hello Clean Stage 1') {
            steps {
                bat 'mvn clean'
            }
        }
        stage ('Stage 2: Test Stage') { 
            steps {
                bat 'mvn test'
            }
        }
        stage ('Stage 3: My Package') {
            steps {
                bat 'mvn package'
            }
        }
        stage ('Stage 4: My Final Build Stage') { 
            steps {
                bat 'mvn install'
            }
        }
   
        stage ('Stage Final: Build Success') {
            steps {
                echo 'Build Success!'
            }
        }
    }
    post {
        success {
            emailext attachLog: true, body: '''Hi,
                      The current status of build ${BUILD_STATUS}
 
                      Thanks''', subject: 'Recent Build Status', to: 'edevikalyani@gmail.com'
        }
        failure {
            echo 'Build failed!'
            emailext body: 'Good news! The build was successful. Check console output at ${env.BUILD_URL}.', subject: 'Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}', to: 'edevikalyani@gmail.com'
        }
    }
}
