pipeline {
agent any
           tools { 
                        maven 'MAVEN_HOME'
                 }
          stages {
                stage('Stage 1: pre-build') {
                   steps {
                             bat 'mvn clean'
                          }
                }
                stage ('Stage 2: Test Stage') { 
                  steps {
                            bat 'mvn test'
                        }
                }
                stage ('Stage 3: My Package') {
                  steps {
                             bat 'mvn package'
                        }
                }
                stage ('Stage 4: My Final Build Stage') { 
                  steps {
                           bat 'mvn install'
                       }
                }
             stage('Check for new commit') {
                    steps {
                          script {

                                 bat 'dir'
                               // Run the Python script
                                    def hasNewCommit = bat(script: 'C:\\Users\\40039440\\AppData\\Local\\Programs\\Python\\Python312\\python.exe commit_checker.py', returnStatus: true)

                    
                                  if (hasNewCommit == 0) {
                                               echo "New commit detected. Proceeding with the build."
                        
                                 } else {
                                              echo "No new commit. Skipping the build."
                                            currentBuild.result = 'SUCCESS'
                                            // Optionally, you can exit the pipeline here
                                            return
                                }
                }
            }
         }
           stage ('Stage Final: Build Success') {
                  steps {
                            echo 'Build Success!'
                        }
                }

                
                     

        }
       
       post {
            always {
            archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
            junit '**/target/surefire-reports/*.xml'
            jacoco execPattern: '**/target/site/jacoco/*.exec'
        }
	  success{
            emailext attachLog: true, body: '''Hi,
                                   The current status of build ${BUILD_STATUS}
 
                   Thanks''', subject: 'Recend Build Status', to: 'edevikalyani@gmail.com'
        }
	failure {
		echo 'Build failed!'
         emailext body: 'Good news! The build was successful. Check console output at ${env.BUILD_URL}.', subject: 'Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}', to: 'edevikalyani@gmail.com'
	}
       }
}

